{"version":3,"sources":["utils/validation/validators.js","components/Header/Header.module.css","redux/profileReducer.js","redux/dialogsReducer.js","redux/usersReducer.js","components/Nav/Friends/Friends.module.css","components/common/FormsControls/FormsControl.module.css","assets/images/Preloader.svg","components/common/Preloader/Preloader.module.css","api/api.js","components/Nav/Nav.module.css","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Nav/Friends/Friends.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControl.js","components/Login/Login.module.css","components/common/Preloader/Preloader.jsx"],"names":["required","value","module","exports","initialState","posts","id","post","likesCount","profile","status","getProfile","userId","dispatch","a","usersAPI","response","setUserProfile","data","getStatus","profileAPI","setStatus","updateStatus","resultCode","savePhoto","file","savePhotoSuccess","photos","saveProfile","getState","auth","stopSubmit","_error","messages","Promise","reject","addPostAC","newPostBody","type","profileReducer","state","action","dialogs","name","ava","message","addMessageCreateAction","newMessageBody","dialogsReducer","users","pageSize","totalPageCount","currentPage","isFetching","followingInProgress","requestUsers","toggleIsFetching","getUsers","setUsers","items","setTotalPageCount","totalCount","requestMoreUsers","nextPage","setMoreUsers","follow","toggleFollowingProgress","getFollow","followAccept","unfollow","getUnfollow","unfollowAccept","setCurrentPage","usersReducer","map","u","followed","concat","filter","instance","axios","baseURL","withCredentials","headers","get","then","delete","getAuth","put","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","News","Music","Settings","Friends","className","classes","friends","src","this","props","React","Component","Nav","friendsElements","f","nav","item","to","activeClassName","active","NavContainer","connect","sidebar","authorizesUserId","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","Header","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","styles","header","isAuth","Button","ref","aria-controls","undefined","aria-haspopup","onClick","small","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","log","captchaUrl","getAuthUserData","setAuthUserData","url","getCaptchaUrlSuccess","payload","authReducer","HeaderContainer","profilePage","handleFocus","select","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","onFocus","component","Log","validate","Pass","Check","checkbox","placeholder","Input","variant","color","error","formSummaryError","body","wrap","initialized","appReducer","withSuspense","fallback","Preloader","MessagesContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","compose","withRouter","app","all","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","messagesPage","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormCon","children","Textarea","input","restProps","meta","child","multiline","control","inputProps","label","Checked","touched","autoComplete","defaultValue","preloader","spinner"],"mappings":"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","file":"static/js/main.4ef0e095.chunk.js","sourcesContent":["export const required = value => {\n    if (value) return undefined;\n\n        return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\",\"log\":\"Header_log__mxIf0\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n    posts: [\n        {id: 3, post: 'Hi, how are you?', likesCount: 5},\n        {id: 2, post: 'It\\'s my first post', likesCount: 32},\n        {id: 1, post: 'I\\'m learn react from it-kamasutra.com', likesCount: 3},\n    ],\n    profile: [],\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, {id: 4, post: action.newPostBody, likesCount: 0}]\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state, profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId\n    let response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        dispatch(getProfile(userId))\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\n        return Promise.reject(response.data.messages[0])\n        // dispatch(stopSubmit(\"edit-profile\", {\"contacts\" : {'facebook': response.data.messages[0]}}))\n    }\n}\n\nexport const addPostAC = (newPostBody) => ({type: 'ADD-POST', newPostBody})\nexport const setUserProfile = (profile) => ({type: 'SET_USER_PROFILE', profile})\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\nexport const savePhotoSuccess = (photos) => ({type: 'SAVE_PHOTO_SUCCESS', photos})\n\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE'\n\nlet initialState = {\n    dialogs: [\n        {\n            id: 2,\n            name: 'Polina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\n        },\n        {\n            id: 3,\n            name: 'Alina',\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\n        },\n        {\n            id: 4,\n            name: 'Evelina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\n        },\n        {id: 5, name: 'Papa', ava: 'https://steepbend.ru/wp-content/uploads/2013/04/Avatarki.jpg'},\n        {\n            id: 6,\n            name: 'Mama',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-06/1528544211_youloveit_ru_avatarki_disney_princessy_ralf_protiv_interneta03.png'\n        },\n        {id: 7, name: 'Max', ava: 'https://1message.ru/wp-content/uploads/2017/03/ustanovka-avatarki7.jpg'},\n        {id: 8, name: 'Brat', ava: 'https://download-cs.net/steam/avatars/3412.jpg'}\n    ],\n    messages: [\n        {id: 1, message: 'На Avatarko.ru', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 2, message: 'Паблик в котором💜', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 3, message: 'Hi', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 4, message: 'I\\'m norm', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 5, message: 'I\\'m learn a react', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 6, message: 'Perfect', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 7, message: 'Good like', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'}\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            return {\n                ...state,\n                messages: [...state.messages, {\n                    id: 8, message: action.newMessageBody, ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'\n                }]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addMessageCreateAction = (newMessageBody) => ({type: 'ADD-MESSAGE', newMessageBody})\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_MORE_USERS = 'SET_MORE_USERS'\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE'\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\nlet initialState = {\n    users: [],\n    pageSize: 8,\n    totalPageCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_MORE_USERS: {\n            let users = state.users.concat(action.users)\n            return {...state, users: users}\n        }\n        case SET_СURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_PAGE_COUNT: {\n            return {...state, totalPageCount: action.totalPageCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const requestUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const requestMoreUsers = (nextPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(nextPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setMoreUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let data = await usersAPI.getFollow(userId)\n        if (data.resultCode == 0) {\n            dispatch(followAccept(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n       let data = await usersAPI.getUnfollow(userId)\n            if (data.resultCode == 0) {\n                dispatch(unfollowAccept(userId))\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const followAccept = (userId) => ({type: 'FOLLOW', userId})\nexport const unfollowAccept = (userId) => ({type: 'UNFOLLOW', userId})\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\nexport const setMoreUsers = (users) => ({type: 'SET_MORE_USERS', users})\nexport const setCurrentPage = (currentPage) => ({type: 'SET_СURRENT_PAGE', currentPage})\nexport const setTotalPageCount = (totalPageCount) => ({type: 'SET_TOTAL_PAGE_COUNT', totalPageCount})\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n    isFetching,\n    userId\n})\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1ylQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__WE9ql\",\"error\":\"FormsControl_error__eY5EU\",\"formSummaryError\":\"FormsControl_formSummaryError__3Uy6X\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.b4376d71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Preloader_spinner__1CHfh\"};","import * as axios from \"axios\";\n\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\"API-KEY\": \"e48e9649-c731-4063-bdca-82c75640897b\"}\n    // headers: {\"API-KEY\": \"d347e033-1c2d-465d-899e-93fbe631170a\"}\n})\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        })\n    },\n    getFollow(id) {\n        return instance.post(`follow/${id}`).then(response => {\n            return response.data\n        })\n    },\n    getUnfollow(id) {\n        return instance.delete(`follow/${id}`).then(response => {\n            return response.data\n        })\n    },\n    getAuth() {\n        return instance.get(`auth/me`)\n    },\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    savePhoto(file) {\n        const formData = new FormData()\n        formData.append('image', file)\n        return instance.put(`profile/photo`, formData\n        )\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get('auth/me')\n    },\n    login(email, password, rememberMe = false, captcha= null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get('security/get-captcha-url')\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"active\":\"Nav_active__XSt-p\"};","import React from 'react';\nimport classes from './News.module.css';\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport './Settings.module.css';\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React from \"react\";\nimport classes from \"./Friends.module.css\";\n\n\n\n// const Friends = (props) => {\n//\n//         return (\n//         <div>\n//             <div className={classes.friends}>\n//                 <img src={props.ava}/> {props.name}\n//             </div>\n//         </div>\n//     )\n// }\n\nclass Friends extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className={classes.friends}>\n                    <img src={this.props.ava}/> {this.props.name}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Friends;","import React from 'react';\nimport classes from './Nav.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\nimport classNames from 'classnames';\n\nclass Nav extends React.Component {\n    friendsElements = () => {\n        this.props.friends.map(f => <Friends name={f.name} ava={f.ava}/>)\n    }\n\n    render() {\n        return (\n            <nav className={classes.nav}>\n                <div className={classes.item}><NavLink to={`/profile`}\n                                                       activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/news'\n                                                       activeClassName={classes.active}>News</NavLink></div>\n                <div className={classes.item}><NavLink to='/messages'\n                                                       activeClassName={classes.active}>Messages</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/music'\n                                                       activeClassName={classes.active}>Music</NavLink></div>\n                <div className={classes.item}><NavLink to='/users'\n                                                       activeClassName={classes.active}>Users</NavLink></div>\n                <div className={classes.item}><NavLink to='/settings'\n                                                       activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/friends'\n                                                       activeClassName={classes.active}>Friends</NavLink>\n                </div>\n                {this.friendsElements}\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Nav from \"./Nav\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        friends: state.sidebar.friends,\n        authorizesUserId: state.auth.userId\n    }\n}\nconst NavContainer = connect(mapStateToProps)(Nav)\n\nexport default NavContainer;","// import React from 'react';\n// import styles from './Header.module.css';\n// import {NavLink} from \"react-router-dom\";\n//\n//\n//\n// const Header = (props) => {\n//     if (!props.profile.photos) {\n//         props.profile.photos = ''\n//     }\n//\n//     return (\n//         <header className={styles.header}>\n//             <img src='http://pngimg.com/uploads/vkontakte/vkontakte_PNG31.png'/>\n//             <div className={styles.login}>\n//\n//\n//                 {props.isAuth\n//                     ? <div>\n//                         <button>\n//                             <span><img src={props.profile.photos.small}/></span>\n//                         </button>\n//                         <span onClick={props.logout}>logout</span>\n//                     </div>\n//                     : <NavLink to={'/login'}>login</NavLink>}\n//             </div>\n//         </header>\n//     )\n// }\n//\n// export default Header\n\n\nimport React from 'react';\nimport styles from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nconst Header = (props) => {\n    if (!props.profile.photos) {\n        props.profile.photos = ''\n    }\n\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n\n    return (\n        <header className={styles.header}>\n            <img src='http://pngimg.com/uploads/vkontakte/vkontakte_PNG31.png'/>\n            <div className={styles.login}>\n\n\n                {props.isAuth\n                    ? <div>\n                    <div className={classes.root}>\n                            {/*<Paper className={classes.paper}>*/}\n                            {/*    <MenuList>*/}\n                            {/*        <MenuItem>Logout</MenuItem>*/}\n                            {/*    </MenuList>*/}\n                            {/*</Paper>*/}\n                            <div>\n                                <Button\n                                    ref={anchorRef}\n                                    aria-controls={open ? 'menu-list-grow' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleToggle}\n                                >\n                                    <span><img src={props.profile.photos.small}/></span>\n                                </Button>\n                                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                                    {({ TransitionProps, placement }) => (\n                                        <Grow\n                                            {...TransitionProps}\n                                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                        >\n                                            <Paper>\n                                                <ClickAwayListener onClickAway={handleClose}>\n                                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                                        <MenuItem onClick={props.logout}>Logout</MenuItem>\n                                                    </MenuList>\n                                                </ClickAwayListener>\n                                            </Paper>\n                                        </Grow>\n                                    )}\n                                </Popper>\n                            </div>\n                        </div>\n                    </div>\n                    : <div className={styles.log}><NavLink to={'/login'}>login</NavLink></div>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH_USER = 'SET_AUTH_USER'\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const getAuthUserData = () => {\n    return async (dispatch) => {\n        let response = await authAPI.me()\n        if (response.data.resultCode === 0) {\n            let {id, email, login, isAuth} = response.data.data\n            dispatch(setAuthUserData(id, email, login, true))\n        }\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else { if (response.data.resultCode === 10) {\n        dispatch(getCaptchaUrl())\n    }\n        dispatch(stopSubmit(\"login\", {_error: response.data.messages}))\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\n\nexport const logout = () => {\n    return async (dispatch) => {\n        let response = await authAPI.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: 'SET_AUTH_USER',\n    payload: {userId, email, login, isAuth}\n})\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: 'GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\n})\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return (\n            <Header {...this.props} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    userId: state.auth.userId,\n    email: state.auth.email,\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n    profile: state.profilePage.profile\n})\n\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);","import React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Check, Input, Log, Pass} from \"../common/FormsControls/FormsControl\";\nimport {required} from \"../../utils/validation/validators\";\nimport {login} from '../../redux/auth-reducer'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst handleFocus = (event) => event.target.select();\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} role='form'>\n            <div>\n                <Field name={'email'} type='email' onFocus={handleFocus}\n                       component={Log} validate={[required]}/>\n            </div>\n            <div>\n                <Field name={'password'}\n                       onFocus={handleFocus}\n                       component={Pass} validate={[required]}/>\n            </div>\n            <div>\n                    <Field component={Check} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>\n            </div>\n\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\n            {props.captchaUrl && <Field placeholder={'captcha'} name={'captcha'}\n                   component={Input} validate={[required]}/>}\n\n            <div className={styles.login}>\n                <Button onClick={props.handleSubmit} variant=\"outlined\" color=\"primary\">Login</Button>\n            </div>\n            {props.error && <div className={classes.formSummaryError}>\n                {props.error}\n            </div>\n            }\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={`/profile`}/>\n    }\n\n    return (\n        <div className={styles.body}>\n            <div className={styles.wrap}>\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    authorizesUserId: state.auth.userId,\n    captchaUrl: state.auth.captchaUrl\n})\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS'})\n\nexport const initializeApp = () => (dispatch) => {\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\n       dispatch(initializedSuccess())\n    })\n}\n\nexport default appReducer;","import React, {Suspense} from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props}/>\n        </Suspense>\n    }\n}","import React from 'react';\nimport {withRouter, Route, HashRouter} from \"react-router-dom\";\nimport './App.css';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport NavContainer from \"./components/Nav/NavContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport Container from \"@material-ui/core/Container\";\n\nconst MessagesContainer = React.lazy(()=> import('./components/Messages/MessagesContainer'))\nconst ProfileContainer = React.lazy(()=> import('./components/Profile/ProfileContainer'))\nconst UsersContainer = React.lazy(()=> import('./components/Users/UsersContainer'))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n           return <Preloader />\n        }\n        return (\n            <HashRouter>\n                <div className='appWrapper'>\n                    <HeaderContainer/>\n                    <NavContainer/>\n                    <div className='.content'>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/messages' render={withSuspense(MessagesContainer)}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        \n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {friends: [\n        {\n            id: 1,\n            name: 'Polina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\n        },\n        {\n            id: 2,\n            name: 'Alina',\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\n        },\n        {\n            id: 3,\n            name: 'Evelina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\n        }\n    ]}\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    messagesPage: dialogsReducer,\n    profilePage: profileReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","// import 'bootstrap/dist/js/bootstrap.bundle.min';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\n\n\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n\nconst FormCon = (props) => {\n    return <div> {props.children}</div>\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <div>\n        <FormCon {...props}><TextField  {...input} {...restProps}\n                                        multiline/></FormCon>\n    </div>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps}/></FormCon>\n}\n\nexport const Check = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={\n        <Checkbox {...input} {...restProps} color=\"primary\"inputProps={{'aria-label': 'secondary checkbox'}}/>}\n                                                 label='Remember me'/></FormCon>\n}\nexport const Checked = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                    inputProps={{'aria-label': 'secondary checkbox'}}\n    />}/></FormCon>\n}\n\nexport const Pass = (props) => {\n    const {input, meta, child, ...restProps} = props\n    const hasError = props.meta.touched && props.meta.error\n    if (hasError) {\n        return <FormCon {...props}><TextField {...input} {...restProps} id=\"standard-password-input\"\n                                              label=\"Password\" type=\"password\" autoComplete=\"current-password\"\n                                              defaultValue=\"Error\" error inputProps={{ 'aria-label': 'description' }}\n        /></FormCon>\n    } else {\n        return <FormCon {...props}><TextField {...input} {...restProps} id=\"standard-password-input\"\n                                              label=\"Password\" type=\"password\"\n                                              autoComplete=\"current-password\"\n        /></FormCon>\n    }\n}\n\n\nexport const Log = (props) => {\n    const {input, meta, child, ...restProps} = props\n    const hasError = props.meta.touched && props.meta.error;\n    if (hasError) {\n        return  <FormCon {...props}><TextField {...input} {...restProps} label=\"Email\" id=\"standard-basic\"\n                                           defaultValue=\"Error\" error inputProps={{ 'aria-label': 'description' }}\n        /></FormCon>\n    } else {\n        return  <FormCon {...props}><TextField {...input} {...restProps} label=\"Email\" id=\"standard-basic\"\n        /></FormCon>\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__TMPVm\"};","import preloader from \"../../../assets/images/Preloader.svg\";\nimport classes from './Preloader.module.css'\nimport React from \"react\";\n\nconst Preloader = (props) => {\n    return <img src={preloader} className={classes.spinner}/>\n}\n\nexport default Preloader;"],"sourceRoot":""}