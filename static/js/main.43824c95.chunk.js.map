{"version":3,"sources":["components/Nav/Nav.module.css","redux/dialogsReducer.js","redux/usersReducer.js","components/Nav/Friends/Friends.module.css","assets/images/Preloader.svg","components/common/Preloader/Preloader.module.css","api/api.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Nav/Friends/Friends.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/redux-store.js","index.js","components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControl.js","utils/validation/validators.js","components/Header/Header.module.css","redux/profileReducer.js"],"names":["module","exports","initialState","dialogs","id","name","ava","messages","message","addMessageCreateAction","newMessageBody","type","dialogsReducer","state","action","users","pageSize","totalPageCount","currentPage","isFetching","followingInProgress","requestUsers","dispatch","a","toggleIsFetching","usersAPI","getUsers","data","setUsers","items","setTotalPageCount","totalCount","requestMoreUsers","nextPage","setMoreUsers","follow","userId","toggleFollowingProgress","getFollow","resultCode","followAccept","unfollow","getUnfollow","unfollowAccept","setCurrentPage","usersReducer","map","u","followed","concat","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","getAuth","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","News","Music","Settings","Friends","className","classes","friends","src","this","props","React","Component","Nav","friendsElements","f","nav","item","to","activeClassName","active","NavContainer","connect","sidebar","authorizesUserId","auth","Header","profile","photos","header","isAuth","class","data-toggle","small","onClick","getAuthUserData","setAuthUserData","payload","authReducer","HeaderContainer","profilePage","handleFocus","event","target","select","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","role","for","Field","placeholder","onFocus","component","Input","validate","required","styles","input","checkbox","error","formSummaryError","stopSubmit","_error","body","wrap","initialized","appReducer","withSuspense","fallback","Preloader","MessagesContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","compose","withRouter","app","Promise","all","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","messagesPage","profileReducer","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","spinner","Element","meta","hasError","touched","formControl","Textarea","value","maxLengthCreator","maxLength","length","posts","likesCount","setUserProfile","setStatus","savePhotoSuccess","addPostAC","newPostBody"],"mappings":"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","file":"static/js/main.43824c95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"active\":\"Nav_active__XSt-p\"};","const ADD_MESSAGE = 'ADD-MESSAGE'\n\nlet initialState = {\n    dialogs: [\n        {\n            id: 2,\n            name: 'Polina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\n        },\n        {\n            id: 3,\n            name: 'Alina',\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\n        },\n        {\n            id: 4,\n            name: 'Evelina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\n        },\n        {id: 5, name: 'Papa', ava: 'https://steepbend.ru/wp-content/uploads/2013/04/Avatarki.jpg'},\n        {\n            id: 6,\n            name: 'Mama',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-06/1528544211_youloveit_ru_avatarki_disney_princessy_ralf_protiv_interneta03.png'\n        },\n        {id: 7, name: 'Max', ava: 'https://1message.ru/wp-content/uploads/2017/03/ustanovka-avatarki7.jpg'},\n        {id: 8, name: 'Brat', ava: 'https://download-cs.net/steam/avatars/3412.jpg'}\n    ],\n    messages: [\n        {id: 1, message: 'На Avatarko.ru', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 2, message: 'Паблик в котором💜', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 3, message: 'Hi', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 4, message: 'I\\'m norm', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 5, message: 'I\\'m learn a react', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 6, message: 'Perfect', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\n        {id: 7, message: 'Good like', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'}\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            return {\n                ...state,\n                messages: [...state.messages, {\n                    id: 8, message: action.newMessageBody, ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'\n                }]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addMessageCreateAction = (newMessageBody) => ({type: 'ADD-MESSAGE', newMessageBody})\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_MORE_USERS = 'SET_MORE_USERS'\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE'\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\nlet initialState = {\n    users: [],\n    pageSize: 8,\n    totalPageCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_MORE_USERS: {\n            let users = state.users.concat(action.users)\n            return {...state, users: users}\n        }\n        case SET_СURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_PAGE_COUNT: {\n            return {...state, totalPageCount: action.totalPageCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const requestUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const requestMoreUsers = (nextPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(nextPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setMoreUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let data = await usersAPI.getFollow(userId)\n        if (data.resultCode == 0) {\n            dispatch(followAccept(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n       let data = await usersAPI.getUnfollow(userId)\n            if (data.resultCode == 0) {\n                dispatch(unfollowAccept(userId))\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const followAccept = (userId) => ({type: 'FOLLOW', userId})\nexport const unfollowAccept = (userId) => ({type: 'UNFOLLOW', userId})\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\nexport const setMoreUsers = (users) => ({type: 'SET_MORE_USERS', users})\nexport const setCurrentPage = (currentPage) => ({type: 'SET_СURRENT_PAGE', currentPage})\nexport const setTotalPageCount = (totalPageCount) => ({type: 'SET_TOTAL_PAGE_COUNT', totalPageCount})\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n    isFetching,\n    userId\n})\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1ylQE\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.b4376d71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Preloader_spinner__1CHfh\"};","import * as axios from \"axios\";\n\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\"API-KEY\": \"e48e9649-c731-4063-bdca-82c75640897b\"}\n    // headers: {\"API-KEY\": \"d347e033-1c2d-465d-899e-93fbe631170a\"}\n})\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        })\n    },\n    getFollow(id) {\n        return instance.post(`follow/${id}`).then(response => {\n            return response.data\n        })\n    },\n    getUnfollow(id) {\n        return instance.delete(`follow/${id}`).then(response => {\n            return response.data\n        })\n    },\n    getAuth() {\n        return instance.get(`auth/me`)\n    },\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    savePhoto(file) {\n        const formData = new FormData()\n        formData.append('image', file)\n        return instance.put(`profile/photo`, formData\n        )\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get('auth/me')\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\n// export const loginAPI = {\n//     login () {\n//         return instance.post('auth/login')\n//     }\n// }\n","import React from 'react';\nimport classes from './News.module.css';\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport './Settings.module.css';\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React from \"react\";\nimport classes from \"./Friends.module.css\";\n\n\n\n// const Friends = (props) => {\n//\n//         return (\n//         <div>\n//             <div className={classes.friends}>\n//                 <img src={props.ava}/> {props.name}\n//             </div>\n//         </div>\n//     )\n// }\n\nclass Friends extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className={classes.friends}>\n                    <img src={this.props.ava}/> {this.props.name}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Friends;","import React from 'react';\nimport classes from './Nav.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\nimport classNames from 'classnames';\n\nclass Nav extends React.Component {\n    friendsElements = () => {\n        this.props.friends.map(f => <Friends name={f.name} ava={f.ava}/>)\n    }\n\n    render() {\n        return (\n            <nav className={classes.nav}>\n                <div className={classes.item}><NavLink to={`/profile`}\n                                                       activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/news'\n                                                       activeClassName={classes.active}>News</NavLink></div>\n                <div className={classes.item}><NavLink to='/messages'\n                                                       activeClassName={classes.active}>Messages</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/music'\n                                                       activeClassName={classes.active}>Music</NavLink></div>\n                <div className={classes.item}><NavLink to='/users'\n                                                       activeClassName={classes.active}>Users</NavLink></div>\n                <div className={classes.item}><NavLink to='/settings'\n                                                       activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                <div className={classes.item}><NavLink to='/friends'\n                                                       activeClassName={classes.active}>Friends</NavLink>\n                </div>\n                {this.friendsElements}\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Nav from \"./Nav\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        friends: state.sidebar.friends,\n        authorizesUserId: state.auth.userId\n    }\n}\nconst NavContainer = connect(mapStateToProps)(Nav)\n\nexport default NavContainer;","import React from 'react';\nimport classes from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    if (!props.profile.photos) {\n        props.profile.photos = ''\n    }\n\n    return (\n        <header className={classes.header}>\n            <img src='http://pngimg.com/uploads/vkontakte/vkontakte_PNG31.png'/>\n            <div className={classes.login}>\n                {props.isAuth\n                    ? <div class='dropdown'>\n                        <button class='btn dropdown-toggle' data-toggle='dropdown'><span>\n                            <img src={props.profile.photos.small}/></span>\n                        </button>\n                        <ul class='dropdown-menu'>\n                            <li class='dropdown-divider'></li>\n                            <li><button class='btn form-control' onClick={props.logout}>log out</button></li>\n                        </ul>\n                    </div>\n                    : <NavLink to={'/login'}>login</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH_USER = 'SET_AUTH_USER'\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getAuthUserData = () => {\n    return async (dispatch) => {\n        let response = await authAPI.me()\n        if (response.data.resultCode === 0) {\n            let {id, email, login, isAuth} = response.data.data\n            dispatch(setAuthUserData(id, email, login, true))\n        }\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let action = stopSubmit(\"login\", {_error: response.data.messages})\n        dispatch(action)\n    }\n}\n\n\nexport const logout = () => {\n    return async (dispatch) => {\n        let response = await authAPI.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: 'SET_AUTH_USER',\n    payload: {userId, email, login, isAuth}\n})\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return (\n            <Header {...this.props} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    userId: state.auth.userId,\n    email: state.auth.email,\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n    profile: state.profilePage.profile\n})\n\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);","import React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControl\";\nimport {required} from \"../../utils/validation/validators\";\nimport {login} from '../../redux/auth-reducer'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nconst handleFocus = (event) => event.target.select();\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} role='form'>\n            <div class='form-group'>\n                <label for='email'>Email</label>\n                <Field placeholder={'email'} name={'email'} type='email' class='form-control' onFocus={handleFocus}\n                       component={Input} validate={[required]}/>\n            </div>\n            <div className={styles.input}>\n                <label for='password'>Password</label>\n                <Field placeholder={'password'} name={'password'} type='password' class='form-control'\n                       onFocus={handleFocus}\n                       component={Input} validate={[required]}/>\n            </div>\n            <div class='checkbox'>\n                <label for='password'>\n                    <Field component={Input} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>remember\n                    me\n                </label>\n            </div>\n            <div className={styles.login}>\n                <button class='btn btn-success'>Login</button>\n            </div>\n            {props.error && <div className={classes.formSummaryError}>\n                {props.error}\n            </div>\n            }\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={`/profile`}/>\n    }\n\n    return (\n        <div className={styles.body}>\n            <div className={styles.wrap}>\n                <LoginReduxForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    authorizesUserId: state.auth.userId\n})\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS',})\n\nexport const initializeApp = () => (dispatch) => {\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\n       dispatch(initializedSuccess())\n    })\n}\n\nexport default appReducer;","import React, {Suspense} from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props}/>\n        </Suspense>\n    }\n}","import React from 'react';\nimport {withRouter, Route, HashRouter} from \"react-router-dom\";\nimport './App.css';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport NavContainer from \"./components/Nav/NavContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst MessagesContainer = React.lazy(()=> import('./components/Messages/MessagesContainer'))\nconst ProfileContainer = React.lazy(()=> import('./components/Profile/ProfileContainer'))\nconst UsersContainer = React.lazy(()=> import('./components/Users/UsersContainer'))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n           return <Preloader />\n        }\n        return (\n            <HashRouter>\n                <div className='appWrapper'>\n                    <HeaderContainer/>\n                    <NavContainer/>\n                    <div className='.content'>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/messages' render={withSuspense(MessagesContainer)}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        \n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {friends: [\n        {\n            id: 1,\n            name: 'Polina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\n        },\n        {\n            id: 2,\n            name: 'Alina',\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\n        },\n        {\n            id: 3,\n            name: 'Evelina',\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\n        }\n    ]}\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    messagesPage: dialogsReducer,\n    profilePage: profileReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__TMPVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__WE9ql\",\"error\":\"FormsControl_error__eY5EU\",\"formSummaryError\":\"FormsControl_formSummaryError__3Uy6X\"};","import preloader from \"../../../assets/images/Preloader.svg\";\nimport classes from './Preloader.module.css'\nimport React from \"react\";\n\nconst Preloader = (props) => {\n    return <img src={preloader} className={classes.spinner}/>\n}\n\nexport default Preloader;","import React from \"react\";\nimport styles from './FormsControl.module.css'\n\nconst Element = Element => ({ input, meta, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\n            <Element {...input} {...props} />\n            { hasError && <span> { meta.error } </span> }\n        </div>\n    );\n};\n\nexport const Textarea = Element(\"textarea\")\nexport const Input = Element(\"input\")","export const required = value => {\n    if (value) return undefined;\n\n        return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n    posts: [\n        {id: 3, post: 'Hi, how are you?', likesCount: 5},\n        {id: 2, post: 'It\\'s my first post', likesCount: 32},\n        {id: 1, post: 'I\\'m learn react from it-kamasutra.com', likesCount: 3},\n    ],\n    profile: [],\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, {id: 4, post: action.newPostBody, likesCount: 0}]\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state, profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\n\nexport const addPostAC = (newPostBody) => ({type: 'ADD-POST', newPostBody})\nexport const setUserProfile = (profile) => ({type: 'SET_USER_PROFILE', profile})\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\nexport const savePhotoSuccess = (photos) => ({type: 'SAVE_PHOTO_SUCCESS', photos})\nexport default profileReducer;"],"sourceRoot":""}