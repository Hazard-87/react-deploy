{"version":3,"sources":["hoc/withAuthRedirect.js","components/Messages/Messages.module.css","components/Messages/Dialogs/Dialogs.module.css","components/Messages/Chatbar/Chatbar.module.css","components/Messages/Chatbar/Chat/Chat.module.css","components/Messages/Dialogs/Dialogs.jsx","components/Messages/Chatbar/Chat/Chat.jsx","components/Messages/Chatbar/Chatbar.jsx","components/Messages/Chatbar/ChatbarContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialogs","className","classes","dialogs","dialog","id","activeClassName","active","img","src","ava","name","Chat","chat","message","avatar","text","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","sms","component","Textarea","placeholder","validate","required","chatSend","Chatbar","messageElements","messagesPage","messages","map","m","chatbar","values","addMessage","newMessageBody","ChatbarContainer","dispatch","addMessageCreateAction","Messages","dialogsElements","compose"],"mappings":"0NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKC,MAAMN,OACR,kBAAEG,EAAcE,KAAKC,OADE,kBAAC,IAAD,CAAUC,GAAG,eAHR,GACXC,IAAML,WAQtC,OAD4BM,YAAQX,EAARW,CAAoCL,K,oBCfpEM,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,IAAM,uB,oBCA7HD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,IAAM,uB,oBCAhGD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,IAAM,kBAAkB,KAAO,qB,gHCgBlEC,EAbC,SAACN,GAEb,OACI,yBAAKO,UAAWC,IAAQC,SACpB,yBAAKF,UAAWC,IAAQE,QAAQ,kBAAC,IAAD,CAAST,GAAI,aAAaD,EAAMW,GACvBC,gBAAiBJ,IAAQK,QAC9D,yBAAKN,UAAWC,IAAQM,KAAK,yBAAKC,IAAKf,EAAMgB,OAC5ChB,EAAMiB,S,6CCIRC,EAZF,SAAClB,GACV,OAEI,yBAAKO,UAAWC,IAAQW,MACpB,yBAAKZ,UAAWC,IAAQY,SACpB,yBAAKb,UAAWC,IAAQM,KAAK,yBAAKC,IAAKf,EAAMqB,UAC7C,yBAAKd,UAAWC,IAAQc,MAAOtB,EAAMoB,Y,kCCiB/CG,EAAYC,YAAiB,IAgB7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAAC1B,GACpB,OACI,0BAAM4B,SAAU5B,EAAM6B,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOvB,UAAWC,IAAQuB,IAAKC,UAAWC,IAAUhB,KAAM,iBACnDiB,YAAa,wBAAyBC,SAAU,CAACC,IAAUb,MAEtE,6BACI,4BAAQhB,UAAWC,IAAQ6B,UAA3B,aAQDC,EApCC,SAACtC,GACb,IAAIuC,EAAkBvC,EAAMwC,aAAaC,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMvB,QAASuB,EAAEvB,QAASC,OAAQsB,EAAE3B,IAAKL,GAAIgC,EAAEhC,QAO1G,OACI,yBAAKJ,UAAWC,IAAQoC,SACnBL,EACD,6BACI,kBAACd,EAAD,CAAqBG,SATb,SAACiB,GACjB7C,EAAM8C,WAAWD,EAAOE,gBACxBF,EAAOE,eAAiB,SCSjBC,EAFU7C,aAdH,SAACV,GACnB,MAAO,CACH+C,aAAc/C,EAAM+C,iBAIH,SAACS,GACtB,MAAO,CACHH,WAAY,SAACC,GACTE,EAASC,YAAuBH,QAKnB5C,CAA6CmC,GCGvDa,EAlBE,SAACnD,GACd,IAAIoD,EAAkBpD,EAAMS,QAAQiC,KAAI,SAAAhC,GAAM,OAAI,kBAAC,EAAD,CAC9CO,KAAMP,EAAOO,KACbN,GAAID,EAAOC,GACXK,IAAKN,EAAOM,SAIhB,OACI,yBAAKT,UAAWC,IAAQiC,UACpB,6BACKW,GAEL,kBAAC,EAAD,Q,gBCLGC,sBACXlD,aAPkB,SAACV,GACnB,MAAO,CACHgB,QAAShB,EAAM+C,aAAa/B,YAMhCb,IAFWyD,CAGbF","file":"static/js/4.c8664876.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to='/login'/>\n            return < Component {...this.props} />\n        }\n    }\n\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return AuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__24vfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__21gkV\",\"dialog\":\"Dialogs_dialog__2uWZD\",\"active\":\"Dialogs_active__TovDd\",\"img\":\"Dialogs_img__qQNCv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatbar\":\"Chatbar_chatbar__i3Jt3\",\"chatSend\":\"Chatbar_chatSend__2AE96\",\"sms\":\"Chatbar_sms__3nZLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Chat_message__Fk6dY\",\"img\":\"Chat_img__3k4IQ\",\"text\":\"Chat_text__IyOeZ\"};","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialogs = (props) => {\n\n    return (\n        <div className={classes.dialogs} >\n            <div className={classes.dialog}><NavLink to={'/messages/'+props.id}\n                                                     activeClassName={classes.active}>\n                <div className={classes.img}><img src={props.ava} /></div>\n                {props.name}\n            </NavLink></div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport classes from './Chat.module.css';\n\nconst Chat = (props) => {\n    return (\n\n        <div className={classes.chat} >\n            <div className={classes.message} >\n                <div className={classes.img}><img src={props.avatar} /></div>\n                <div className={classes.text}>{props.message}</div >\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;","import React from 'react';\nimport classes from './Chatbar.module.css';\nimport Chat from \"./Chat/Chat\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\n\n\nconst Chatbar = (props) => {\n    let messageElements = props.messagesPage.messages.map(m => <Chat message={m.message} avatar={m.ava} id={m.id}/>)\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n        values.newMessageBody = ''\n    }\n\n    return (\n        <div className={classes.chatbar}>\n            {messageElements}\n            <div>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={classes.sms} component={Textarea} name={'newMessageBody'}\n                       placeholder={'Enter your message...'} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button className={classes.chatSend}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Chatbar;","import React from 'react';\nimport {addMessageCreateAction} from \"../../../redux/dialogsReducer\";\nimport Chatbar from \"./Chatbar\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageCreateAction(newMessageBody))\n        }\n    }\n}\n\nconst ChatbarContainer = connect(mapStateToProps, mapDispatchToProps)(Chatbar);\n\nexport default ChatbarContainer;","import React from 'react';\nimport classes from './Messages.module.css';\nimport Dialogs from \"./Dialogs/Dialogs\";\nimport ChatbarContainer from \"./Chatbar/ChatbarContainer\";\n\nconst Messages = (props) => {\n    let dialogsElements = props.dialogs.map(dialog => <Dialogs\n        name={dialog.name}\n        id={dialog.id}\n        ava={dialog.ava}/>)\n\n\n\n    return (\n        <div className={classes.messages}>\n            <div>\n                {dialogsElements}\n            </div>\n            <ChatbarContainer/>\n        </div>\n    )\n}\n\nexport default Messages;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Messages from \"./Messages\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage.dialogs,\n    }\n}\n\nexport default compose (\n    connect(mapStateToProps),\n    withAuthRedirect\n)(Messages)"],"sourceRoot":""}